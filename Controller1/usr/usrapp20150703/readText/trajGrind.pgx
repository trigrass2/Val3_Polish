<?xml version="1.0" encoding="utf-8"?>
<Programs xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.staubli.com/robotics/VAL3/Program/2">
  <Program name="trajGrind" access="public">
    <Locals>
      <Local name="l_nNum" type="num" xsi:type="array" size="1" />
      <Local name="i" type="num" xsi:type="array" size="1" />
      <Local name="l_nTime" type="num" xsi:type="array" size="1" />
    </Locals>
    <Code><![CDATA[begin
  //判断
  if bResumeCycle
    if nMoveID<40
      bResumeCycle=false
      nMoveID=0
    else
      nMoveID=nMoveID-10
    endIf
  else
    nMoveID=0
  endIf
  //继续上一次任务
  if bResumeCycle
    nReadPtr=nMoveID%1000
    nThousandRead=roundDown(nMoveID/1000)
    movel(appro(pPointRead[nReadPtr],{0,0,-50,0,0,0}),tPrdTool,mNomSpeed)
    waitEndMove()
    //    if date:bPLC
    //      //启动主轴工具
    //      dioSet(io:doB_7_toolOn,1)
    //      //等待主轴工具启动Ok
    //      if !watch(dioGet(io:diB_4_tSpeedOk)==1,3)
    //        logMsg("等待主轴启动ok")
    //        popUpMsg("请检查主轴转速!")
    //      endIf
    //      wait(dioGet(io:diB_4_tSpeedOk)==1)
    //    endIf
    wait(nWritePtr+1000*nThousandWrite>=nReadPtr+1000*nThousandRead)
    setMoveId(nMoveID+1)
    bResumeCycle=false
    //重新开始任务
  else
    nTrajofRead=0
    nThousandRead=0
    nReadPtr=0
    nReadJnt=0
    wait(bTxtHeadOk)
    bTxtHeadOk=false
    resetMotion()
    movej(jPrdHome,tPrdTool,mNomSpeed)
    waitEndMove()
    
    
    //2015.02.02
    //添加暂停信号
    popUpMsg("准备打磨，请按下F7继续")
    wait(getKey()==277)
    
    
    
    
    //    if date:bPLC
    //      //启动主轴工具
    //      dioSet(io:doB_7_toolOn,1)
    //      //等待主轴工具启动Ok
    //      if !watch(dioGet(io:diB_4_tSpeedOk)==1,3)
    //        popUpMsg("请检查主轴转速!")
    //      endIf
    //      wait(dioGet(io:diB_4_tSpeedOk)==1)
    //    endIf
    setMoveId(0)
  endIf
  //实时向转台发送转动速度代码
  //  if date:bWorTbMoving
  //    dioSet(io:doB_9_tableOn,1)
  //    wait(dioGet(io:doB_9_tableOn)==1)
  //    if taskStatus("workTabSpd")!=-1
  //      taskKill("workTabSpd")
  //      wait(taskStatus("workTabSpd")==-1)
  //    endIf
  //    taskCreate "workTabSpd",99,workTabSpd()
  //  endIf
 // nFileId2=$fileOpen("Disk://txt/speed of TCP.txt","w")
  do
    //至少需要缓存2个
    if nWritePtr+nThousandWrite*1000-nReadPtr-nThousandRead*1000>2 or bWriteEnd==true
      bReadWait=false
      if sMoveMode[nReadPtr]=="MOVEJ" and !bReadEnd and !bReadWait
        if nZshift==0
          movej(jJointRead[nReadJnt],tPrdTool,mSpdOfJnt[nReadJnt])
        else
          //2015
          pPBuff=jointToPoint(tPrdTool,world,jJointRead[nReadJnt])
          movej(appro(pPBuff,{0,0,nZshift,0,0,0}),tPrdTool,mSpdOfJnt[nReadJnt])
          //
        endIf
        waitEndMove()
        setMoveId(nReadPtr+1+nThousandRead*1000)
        if !bReadEnd
          nReadJnt=nReadJnt+1
          if nReadJnt>99
            nReadJnt=0
            nHundredRead=nHundredRead+1
          endIf
          nReadPtr=nReadPtr+1
          if nReadPtr>999
            nReadPtr=0
            nThousandRead=nThousandRead+1
          endIf
        endIf
      endIf
      if nReadPtr+nThousandRead*1000==nWritePtr+nThousandWrite*1000
        bReadEnd=true
      endIf
      if sMoveMode[nReadPtr]=="MOVEL" and !bReadEnd and !bReadWait
        pGrinding=compose(pPointRead[nReadPtr],fPrdFrame,trPrdFrmOffset)
        
        //2015.02.04
        l_nTime=mSpdOfPt[nReadPtr].leave
        //2015.07.28
                  mSpdOfPt[nReadPtr].blend=Cartesian
          mSpdOfPt[nReadPtr].leave=mSpdOfPt[nReadPtr].reach=0.005
        if nReadPtr>0 and distance(pPointRead[nReadPtr],pPointRead[nReadPtr-1])<2
          mSpdOfPt[nReadPtr].accel= mSpdOfPt[nReadPtr].decel=2
        endIf
        
        
        //
        movel(pGrinding,tPrdTool,mSpdOfPt[nReadPtr])
        if l_nTime>0
          waitEndMove()
          delay(l_nTime)
        endIf
        if !bReadEnd
          nReadPtr=nReadPtr+1
          if nReadPtr>999
            nReadPtr=0
            nThousandRead=nThousandRead+1
          endIf
        endIf
        if nReadPtr+nThousandRead*1000==nPtOfTraj[nTrajofRead]
          if nTrajofRead<nCurrentTraj
            nTrajofRead=nTrajofRead+1
          endIf
          //wait((nWritePtr+nThousandWrite*1000-nReadPtr-nThousandRead*1000>nPtBuffer) or bWriteEnd==true)
        endIf
      endIf
      if nReadPtr+nThousandRead*1000==nWritePtr+nThousandWrite*1000
        bReadEnd=true
      endIf
      nMoveID=getMoveId()
      nSpdOfTCP=getSpeed(tPrdTool)
      //      sSpeedDate=toString("6.2",nMoveID)+"="+toString("6.2",nSpdOfTCP)
      sSpeedDate=toString("6.2",nSpdOfTCP)
      //$fileSet(nFileId2,sSpeedDate,1)
    else
      bReadWait=true
      wait((nWritePtr+nThousandWrite*1000-nReadPtr-nThousandRead*1000>nPtBuffer) or bWriteEnd==true)
      logMsg("正在等待从TXT文件读取数据")
    endIf
  until roundUp(nMoveID)>=nWritePtr+nThousandWrite*1000 and bWriteEnd and bReadEnd
  //$fileClose(nFileId2)
  waitEndMove()
  //  if date:bWorTbMoving==true
  //    popUpMsg("循环开始")
  //    for l_nNum=0 to nCountCycle
  //      for i=0 to nWritePtr-1
  //        if sMoveMode[i]=="MOVEL"
  //          pGrinding=compose(pPointRead[i],fPrdFrame,trPrdFrmOffset)
  //          movel(pGrinding,tPrdTool,mSpdOfPt[i])
  ////          nMoveID=roundUp(getMoveId())
  //          nMoveID=getMoveId()
  //        endIf
  //      endFor
  //      for i=nWritePtr-1 to 0 step -1
  //        if sMoveMode[i]=="MOVEL"
  //          pGrinding=compose(pPointRead[i],fPrdFrame,trPrdFrmOffset)
  //          movel(pGrinding,tPrdTool,mSpdOfPt[i])
  ////          nMoveID=roundUp(getMoveId())
  //          nMoveID=getMoveId()
  //        endIf
  //      endFor
  //    endFor
  //  endIf
  // movej(jJointRead[nReadJnt-1],tPrdTool,mSpdOfJnt[nReadJnt])
  
  //********************************
  if nZshift==0
    movej(jJointRead[nReadJnt-1],tPrdTool,mSpdOfJnt[nReadJnt])
  else
    //2015
    pPBuff=jointToPoint(tPrdTool,world,jJointRead[nReadJnt-1])
    movej(appro(pPBuff,{0,0,nZshift,0,0,0}),tPrdTool,mSpdOfJnt[nReadJnt])
    //
  endIf
  //*********
  movej(jPrdHome,tPrdTool,mNomSpeed)
  waitEndMove()
  popUpMsg("生产结束!")
  bCycle=false
  bCycleEnd=true
  bResumeCycle=false
end
]]></Code>
  </Program>
</Programs>